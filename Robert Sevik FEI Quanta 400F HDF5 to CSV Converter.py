# -*- coding: utf-8 -*-
"""Argonne Code

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1apQ3W4KOdTOQu69a89R2qlLsKfpyZLJN
"""

import matplotlib.pyplot as plt
import h5py
import pandas as pd
import os

folderPath = 'internal computer path to folder'

# To execute for a specific folder just call the function HDF5_to_CSV_Converter
# Only the folder path is required, the code should do the rest
# This code will produce data that is NOT Backgroun corrected


def HDF5_to_CSV_Converter(folderPath):

  # The for loop iterates through every file in the designated folder
  for name in os.listdir(folderPath):

  # Condition only applies to HDF5 files
  # No reformatting of Quanta 400F outpus
    if name.endswith('h5'):
      filePath = os.path.join(folder_path,name)

  # HDF5 files are specifically optimized for efficeint use in python
  # A simple way to think about them is as multi-dimensional dictionaries
  # More about the structure of the files in the README Section

      with h5py.File(filePath,'r') as extractionfile:

  # Intensity and Wavelength data extracted from File Metadata

        wavelength = extractionfile['Acquisition1']['ImageData']['DimensionScaleC'][:]
        intensity = extractionfile['Acquisition1']['ImageData']['Image'][:]

  # Converted to two different lists

        wavelength_list = wavelength.flatten()
        intensity_list = intensity.flatten()

  # A DataFrame of the desired data is created
  # DataFrames are a convenient format for filetype manipulation

        csvFileOutput = pd.DataFrame({'Wavelength':wavelength_list,'Intensity':intensity_list})

  # A copy of the filepath with the filetype changed from HDF5 to CSV

        csvReformatting = name.replace('.h5','.csv')

  # The resulting csv is output to the original folder location
  # It should have the same name as the original HDF5 file

        csvFileOutput.to_csv(os.path.join(folderPath,csvReformatting), index=False)